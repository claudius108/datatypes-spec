<?xml version="1.0" encoding="UTF-8"?>

<?oxygen RNGSchema="http://expath.org/ns/xmlspec/xmlspec.rnc" type="compact"?>

<spec xmlns:spec="http://expath.org/ns/xmlspec" role="editors-copy">
   <header>
      <title>DataType Conversion Module</title>
      <version>1.0</version>
      <w3c-designation>w3c-designation</w3c-designation>
      <w3c-doctype>EXPath Candidate Module</w3c-doctype>
      <pubdate>
         <day>08</day>
         <month>November</month>
         <year>2012</year>
      </pubdate>
      <latestloc>
         <loc href="http://expath.org/spec/datatype-conversion"/>
      </latestloc>
      <authlist>
         <author role="editor">
            <name id="cteodorescu">Claudius Teodorescu</name>
            <affiliation>XML Consultant</affiliation>
         </author>
      </authlist>
	<copyright>
		<p>
			Copyright Â© 2012-2013 Claudius Teodorescu, published by the
			<loc href="http://w3.org/community/expath/">EXPath Community Group</loc>
			under the
			<loc href="https://www.w3.org/community/about/agreements/cla/">W3C Community Contributor
				License Agreement (CLA)</loc>
			. A human-readable
			<loc href="http://www.w3.org/community/about/agreements/cla-deed/">summary</loc>
			is
			available.
		</p>
		<p>
			This specification was published by the
			<loc href="http://www.w3.org/community/expath/">EXPath Community Group</loc>
			. It is not a W3C Standard nor is it on the W3C
			Standards Track. Please note that under the
			<loc href="http://www.w3.org/community/about/agreements/cla/">W3C Community Contributor
				License Agreement (CLA)</loc>
			there is a limited opt-out and other conditions apply.
			Learn more about
			<loc href="http://www.w3.org/community/">W3C Community and Business
				Groups</loc>
			.
		</p>
	</copyright>
      <abstract>
         <p>This proposal defines a <phrase id="module-description">module for handling various datatypes</phrase>.
          It has been designed to be compatible with XQuery 3.0 and XSLT 3.0, as well as any other standard based on XPath 3.0.</p>
          <p>As this is a work in progress, more details about it can be found at
          <a href="https://docs.google.com/document/d/1aLoJHvzG9zFaTNM110xMjg-qMHT7vYtWpcBmYoawSJE/pub">Datatype Conversion Functions Comparison</a>.</p>
      </abstract>
      <status>
         <p>Must be ignored, but is required by the schema...</p>
      </status>
      <langusage>
         <language>langusage</language>
      </langusage>
      <revisiondesc>
         <p>revisiondesc</p>
      </revisiondesc>
   </header>
   <body>
      <div1>
         <head>Introduction</head>
         <p>This module is designed for datatypes handling, providing conversions between datatypes that are not covered by casts mentioned in
         <bibref ref="xpath-functions-30"/>, as well as other functions related to datatypes.</p>
         <div2>
            <head>Namespace conventions</head>
            <p>The module defined by this document defines functions and elements in the namespace
                  <code id="module-namespace">http://expath.org/ns/datatypes</code>. In this document, the
                  <code id="module-prefix">datatypes</code> prefix, when used, is bound to this namespace URI.</p>
            <p>Error codes are defined in the namespace <code>http://expath.org/ns/error</code>. In
               this document, the <code>err</code> prefix, when used, is bound to this namespace
               URI.</p>
         </div2>
         <div2>
            <head>Error management</head>
            <p>Error conditions are identified by a code (a <code>QName</code>). When such an error
               condition is reached during the execution of the function, a dynamic error is thrown,
               with the corresponding error code (as if the standard XPath function
                  <code>error</code> had been called).</p>
         </div2>
      </div1>
      <div1>
         <head>Datatype Systems</head>
         <p>These are functions allowing operations on datatype systems. The implementations should register by default the XML datatype system
         (<bibref ref="xmlschema11-1"/>). Other datatype systems are implementation dependent.</p>
         <div2>
            <head>The <code>datatypes:register-datatype-system</code> function</head>
            <p>This function registers a datatype system.</p>
            <eg>
<spec:function>datatypes:register-datatype-system</spec:function>($uri as <spec:type>xs:anyURI</spec:type>) as <spec:type>empty()</spec:type>
</eg>
            <ulist>
               <item>
                  <p><code>$uri</code> is the uri of the datatype system to be registered.</p>
               </item>
            </ulist>             
         </div2>
         <div2>
            <head>The <code>datatypes:deregister-datatype-system</code> function</head>
            <p>This function deregisters a datatype system.</p>
            <eg>
<spec:function>datatypes:deregister-datatype-system</spec:function>($uri as <spec:type>xs:anyURI</spec:type>) as <spec:type>empty()</spec:type>
</eg>
            <ulist>
               <item>
                  <p><code>$uri</code> is the uri of the datatype system to be deregistered.</p>
               </item>
            </ulist>             
         </div2>
      </div1>      
      <div1>
            <head>Conversions</head>
		    <p>These functions are for conversions between various datatypes.</p>      
	      <div2>
	         <head><code>xs:base64Binary</code> to other datatypes</head>
	         <p>These functions provide conversion from xs:base64Binary datatype to other datatypes.</p>
	         <div3>
	            <head>The <code>datatypes:base64Binary-to-byte</code> function</head>
	            <p>This function converts from xs:base64Binary to xs:byte.</p>
	            <eg>
<spec:function>datatypes:base64Binary-to-byte</spec:function>($data as <spec:type>xs:base64Binary?</spec:type>) as <spec:type>xs:byte*</spec:type>
</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	            </ulist>            
	         </div3>          
	         <div3>
	            <head>The <code>datatypes:base64Binary-to-string</code> function</head>
	            <p>This function converts from xs:base64Binary to xs:string.</p>
	            <eg>
<spec:function>datatypes:base64Binary-to-string</spec:function>($data as <spec:type>xs:base64Binary?</spec:type>) as <spec:type>xs:string?</spec:type>
</eg>
	            <eg>
<spec:function>datatypes:base64Binary-to-string</spec:function>($data as <spec:type>xs:base64Binary?</spec:type>,
		$encoding as xs:string) as <spec:type>xs:string?</spec:type>
</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	               <item>
	                  <p><code>$encoding</code> is the encoding used for conversion. The default value is UTF-8. If it is specified an unsupported encoding, this
	                  is an error <bibref ref="errDT01"/>.</p>
	               </item>
	            </ulist>            
	         </div3> 
	      </div2>
	      <div2>
	         <head><code>xs:byte</code> to other datatypes</head>
	         <p>These functions provide conversion from xs:byte datatype to other datatypes.</p>
	         <div3>
	            <head>The <code>datatypes:byte-to-base64Binary</code> function</head>
	            <p>This function converts from xs:byte to xs:base64Binary.</p>
	            <eg>
<spec:function>datatypes:byte-to-base64Binary</spec:function>($data as <spec:type>xs:byte*</spec:type>) as <spec:type>xs:base64Binary?</spec:type>
</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	            </ulist>            
	         </div3>  
	         <div3>
	            <head>The <code>datatypes:byte-to-hexBinary</code> function</head>
	            <p>This function converts from xs:byte to xs:hexBinary.</p>
	            <eg>
	<spec:function>datatypes:byte-to-hexBinary</spec:function>($data as <spec:type>xs:byte*</spec:type>) as <spec:type>xs:hexBinary?</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	            </ulist>            
	         </div3>                    
	      </div2>   
	      <div2>
	         <head><code>xs:hexBinary</code> to other datatypes</head>
	         <p>These functions provide conversion from xs:hexBinary datatype to other datatypes.</p>
	         <div3>
	            <head>The <code>datatypes:hexBinary-to-byte</code> function</head>
	            <p>This function converts from xs:hexBinary to xs:byte.</p>
	            <eg>
	<spec:function>datatypes:hexBinary-to-byte</spec:function>($data as <spec:type>xs:hexBinary?</spec:type>) as <spec:type>xs:byte*</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	            </ulist>            
	         </div3>          
	         <div3>
	            <head>The <code>datatypes:hexBinary-to-string</code> function</head>
	            <p>This function converts from xs:hexBinary to xs:string.</p>
	            <eg>
	<spec:function>datatypes:hexBinary-to-string</spec:function>($data as <spec:type>xs:hexBinary?</spec:type>) as <spec:type>xs:string?</spec:type>
	</eg>
	            <eg>
	<spec:function>datatypes:hexBinary-to-string</spec:function>($data as <spec:type>xs:hexBinary?</spec:type>,
			$encoding as xs:string) as <spec:type>xs:string?</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	               <item>
	                  <p><code>$encoding</code> is the encoding used for conversion. The default value is UTF-8. If it is specified an unsupported encoding, this
	                  is an error <bibref ref="errDT01"/>.</p>
	               </item>
	            </ulist>            
	         </div3> 
	      </div2> 
	      <div2>
	         <head><code>xs:string</code> to other datatypes</head>
	         <p>These functions provide conversion from xs:string datatype to other datatypes.</p>
	         <div3>
	            <head>The <code>datatypes:string-to-base64Binary</code> function</head>
	            <p>This function converts from xs:string to xs:base64Binary.</p>
	            <eg>
	<spec:function>datatypes:string-to-base64Binary</spec:function>($data as <spec:type>xs:string?</spec:type>) as <spec:type>xs:base64Binary?</spec:type>
	</eg>
	            <eg>
	<spec:function>datatypes:string-to-base64Binary</spec:function>($data as <spec:type>xs:string?</spec:type>,
			$encoding as xs:string) as <spec:type>xs:base64Binary?</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	               <item>
	                  <p><code>$encoding</code> is the encoding used for conversion. The default value is UTF-8. If it is specified an unsupported encoding, this
	                  is an error <bibref ref="errDT01"/>.</p>
	               </item>
	            </ulist>            
	         </div3> 
	         <div3>
	            <head>The <code>datatypes:string-to-hexBinary</code> function</head>
	            <p>This function converts from xs:string to xs:hexBinary.</p>
	            <eg>
	<spec:function>datatypes:string-to-hexBinary</spec:function>($data as <spec:type>xs:string?</spec:type>) as <spec:type>xs:hexBinary?</spec:type>
	</eg>
	            <eg>
	<spec:function>datatypes:string-to-hexBinary</spec:function>($data as <spec:type>xs:string?</spec:type>,
			$encoding as xs:string) as <spec:type>xs:hexBinary?</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	               <item>
	                  <p><code>$encoding</code> is the encoding used for conversion. The default value is UTF-8. If it is specified an unsupported encoding, this
	                  is an error <bibref ref="errDT01"/>.</p>
	               </item>
	            </ulist>            
	         </div3>  
	         <div3>
	            <head>The <code>datatypes:string-to-integer</code> function</head>
	            <p>This function converts from xs:string to xs:integer.</p>
	            <eg>
	<spec:function>datatypes:string-to-integer</spec:function>($data as <spec:type>xs:string?</spec:type>,
			$radix as <spec:type>xs:integer</spec:type>) as <spec:type>xs:integer?</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	               <item>
	                  <p><code>$radix</code> is the radix used to provide the conversion of $data ($data is considered being in radix $radix).</p>
	               </item>               
	            </ulist>            
	         </div3>                 
	      </div2>
	      <div2>
	         <head><code>xs:integer</code> to other datatypes</head>
	         <p>These functions provide conversion from xs:integer datatype to other datatypes.</p>
	         <div3>
	            <head>The <code>datatypes:integer-to-string</code> function</head>
	            <p>This function converts from xs:integer to xs:string.</p>
	            <eg>
	<spec:function>datatypes:integer-to-string</spec:function>($data as <spec:type>xs:integer?</spec:type>,
			$radix as <spec:type>xs:integer</spec:type>) as <spec:type>xs:string?</spec:type>
	</eg>
	            <ulist>
	               <item>
	                  <p><code>$data</code> is the data to be converted.</p>
	               </item>
	               <item>
	                  <p><code>$radix</code> is the radix used to provide the conversion of $data.</p>
	               </item>               
	            </ulist>            
	         </div3>  
	      </div2>  
      </div1>
      <div1>
         <head>User defined datatypes</head>
         <p>These are functions related to the user defined datatypes.</p>
         <div2>
            <head>The <code>datatypes:define</code> function</head>
            <p>This function defines a user defined datatype.</p>
         </div2>  
      </div1>
      <div1>
         <head>Mappings</head>
         <p>These are functions related to mappings between various datatype systems.</p>
         <div2>
            <head>The <code>datatypes:set-mapping</code> function</head>
            <p>This function sets mappings between datatypes belonging to different datatype systems. One can map one or more source datatypes to one target
            datatype, or one source datatype to one or more target datatypes.</p>
            <eg>
<spec:function>datatypes:set-mapping</spec:function>($source-datatype as <spec:type>xs:string+</spec:type>,
		$target-datatype as <spec:type>xs:string+</spec:type>) as <spec:type>empty()</spec:type>
</eg>
            <ulist>
               <item>
                  <p><code>$source-datatype</code> is the source datatype to set the mapping for.</p>
               </item>
               <item>
                  <p><code>$target-datatype</code> is the target datatype to set the mapping for.</p>
               </item>               
            </ulist>             
         </div2>
         <div2>
            <head>The <code>datatypes:get-mapping</code> function</head>
            <p>This function returns the mapping(s) between datatypes belonging to different datatype systems. If there are more target datatypes mapped, they are
            all returned.</p>
            <eg>
<spec:function>datatypes:get-mapping</spec:function>($source-datatype as <spec:type>xs:string</spec:type>,
		$target-datatype-system as <spec:type>xs:anyURI</spec:type>) as <spec:type>xs:string*</spec:type>
</eg>
            <ulist>
               <item>
                  <p><code>$source-datatype</code> is the datatype to get the mapping(s) of.</p>
               </item>
               <item>
                  <p><code>$target-datatype-system</code> is the datatype system to get the mapping(s) from.</p>
               </item>               
            </ulist>             
         </div2>
         <div2>
            <head>The <code>datatypes:delete-mapping</code> function</head>
            <p>This function deletes the mapping between datatypes belonging to different datatype systems. If they are more source or target datatypes,
            each individual mapping between each one of them will be deleted.</p>
            <eg>
<spec:function>datatypes:delete-mapping</spec:function>($source-datatype as <spec:type>xs:string+</spec:type>,
		$target-datatype as <spec:type>xs:string+</spec:type>) as <spec:type>empty()</spec:type>
</eg>
            <ulist>
               <item>
                  <p><code>$source-datatype</code> is the source datatype to delete the mapping for.</p>
               </item>
               <item>
                  <p><code>$target-datatype</code> is the target datatype to delete the mapping for.</p>
               </item>               
            </ulist>             
         </div2>
      </div1>
      <div1>
         <head>Characterizing Operations</head>
         <p>These are functions allowing operations on the registered datatypes. (https://w3.org/1999/05/06-xmlschema-2/#characterizing-operations)</p>         
      </div1>      
   </body>
   <back>
      <div1>
         <head>References</head>
         <blist>
            <bibl id="xpath-30" key="XPath 3.0">
               <loc href="http://w3.org/TR/xpath-30/">XML Path Language (XPath) 3.0</loc>.
               Jonathan Robie, Don Chamberlin, Michael Dyck, John Snelson, editors. W3C Working Draft, 13 December 2011.</bibl>
            <bibl id="xslt-30" key="XSLT 3.0">                        
               <loc href="http://w3.org/TR/xslt-30/">XSL Transformations (XSLT) Version 3.0</loc>.
               Michael Kay, editor. W3C Working Draft, 10 July 2012.</bibl>         
            <bibl id="xquery-30" key="XQuery 3.0">                        
               <loc href="http://w3.org/TR/xquery-30/">XQuery 3.0: An XML Query Language</loc>.
               Jonathan Robie, Don Chamberlin, Michael Dyck, John Snelson, editors. W3C Working Draft, 13 December 2011.</bibl>
            <bibl id="xpath-functions-30" key="XPath and XQuery Functions and Operators 3.0">
               <loc href="http://w3.org/TR/xpath-functions-30/">XPath and XQuery Functions and Operators 3.0</loc>.
               Michael Kay, editor. W3C Working Draft, 13 December 2011.</bibl>                                
            <bibl id="xpath-datamodel-30" key="XQuery and XPath Data Model 3.0">
               <loc href="http://w3.org/TR/xpath-datamodel-30/">XQuery and XPath Data Model 3.0</loc>.
               Norman Walsh, Anders Berglund, John Snelson, editors. W3C Working Draft, 13 December 2011.</bibl>               
            <bibl id="xmlschema11-1" key="W3C XML Schema Definition Language (XSD) 1.1 Part 1: Structures">
               <loc href="http://w3.org/TR/xmlschema11-1/">W3C XML Schema Definition Language (XSD) 1.1 Part 1: Structures</loc>.
               Henry S. Thompson, Noah Mendelsohn, David Beech, Murray Maloney, editors. W3C Recommendation, 5 April 2012.</bibl> 
            <bibl id="xmlschema11-2" key="W3C XML Schema Definition Language (XSD) 1.1 Part 2: Datatypes">
               <loc href="http://w3.org/TR/xmlschema11-2/">W3C XML Schema Definition Language (XSD) 1.1 Part 2: Datatypes</loc>.
               David Peterson, Shudi (Sandy) Gao é«æ®é, Ashok Malhotra, C. M. Sperberg-McQueen, Henry S. Thompson, editors. W3C Recommendation, 5 April 2012.</bibl>   
            <bibl id="rfc2045" key="RFC 2045 - Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies">
               <loc href="http://ietf.org/rfc/rfc2045/">Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies</loc>.
               N. Freed, N. Borenstein, editors. Network Working Group, November 1996.</bibl>                                          
         </blist>
      </div1>
      <div1>
         <head>Summary of Error Conditions</head>
         <blist id="summary-of-error-conditions">
            <bibl id="errDT01" key="err:DT01">The encoding is not supported.</bibl>
         </blist>
      </div1>
   </back>
</spec>
